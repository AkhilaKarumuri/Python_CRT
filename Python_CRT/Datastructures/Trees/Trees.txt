What is a Tree:-
A tree is a Data srtucture similar to a linked list but instead of each node pointing simply to the next node in a linear fashion, each node points to several nodes.
A tree is an example of a non-linear DS.
A tree structure is a way of representing the hierarchial structure of a structure in a graphical form.
The root of a tree is a node with no parents. There can be at most one root node in a tree
An edge refers to the link from parent to a cild
A node with no child is called a leaf node
The children nodes of the same parent are called siblings
The set of all nodes at agiven point is called the level of the tree. The root node is at level zero
The depth of a node is the length of the path from the root to the node
The height of a node is the length of the path from that node to the deepest node
The height of a tree is the length of the path from the root to the deepest node in the tree
A (rooted) tree with only one node (the root) has a zero height
Binary Trees
A genetic tree with at most tawo child nodes for each parent node --> Binary Tree
A B.T is made up of nodes that constitute a left pointer, a right pointer, and a data element. The root pointer is the top most node in the tree.
The left and right pointerss recursively point to smaller subtrees on either side
An empty tree is also a valid B.T
A formal definition is :- A b.T is either empty by a None or is made of a single node, where the left and right pointers (recursive definition  ahead) each point to a binary tree

Types of B.T:-

Full B.T: A B.T in which every node has 0 or 2 children is termed as FBT


A degenerate Tree:- Each Internal node has only 1 child
Balanced BT:- A BT in which the difference between the depth of the two subtrees of every node is at most one 

Operation on Tree:- 
Auxillary operations
Finding the Size of the tree, Finding the height of the tree, Finding the level which has the max sum and many more
